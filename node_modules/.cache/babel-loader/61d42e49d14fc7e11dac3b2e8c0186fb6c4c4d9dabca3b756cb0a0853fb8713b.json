{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BaseInput from './components/BaseInput.vue';\nimport SelectorCrypto from './components/SelectorCrypto.vue';\nimport CryptoConvert from 'crypto-convert';\nimport FavuoriteComponent from './components/FavouriteComponent.vue';\nconst convert = new CryptoConvert();\nexport default {\n  components: {\n    BaseInput,\n    SelectorCrypto,\n    FavuoriteComponent\n  },\n  data() {\n    return {\n      amount: 0,\n      cryptoFirst: '',\n      cryptoSecond: '',\n      error: '',\n      result: 0,\n      favs: []\n    };\n  },\n  methods: {\n    changeAmount(val) {\n      this.amount = val;\n      this.result = 0;\n    },\n    changeCryptoFirst(val) {\n      this.cryptoFirst = val;\n    },\n    changeCryptoSecond(val) {\n      this.cryptoSecond = val;\n    },\n    async convert() {\n      this.result = 0;\n      if (this.amount <= 0) {\n        this.error = \"Введіть число більше 0\";\n        return;\n      } else if (this.cryptoFirst === '' || this.cryptoSecond === '') {\n        this.error = \"Оберіть криптовалюти\";\n        return;\n      } else if (this.cryptoFirst === this.cryptoSecond) {\n        this.error = \"Оберіть різні криптовалюти\";\n        return;\n      }\n      this.error = '';\n      await convert.ready();\n      this.result = convert[this.cryptoFirst][this.cryptoSecond](this.amount);\n    },\n    favourite() {\n      this.favs.push({\n        from: this.cryptoFirst,\n        to: this.cryptoSecond\n      });\n    },\n    getfromFavs(index) {}\n  }\n};","map":{"version":3,"names":["BaseInput","SelectorCrypto","CryptoConvert","FavuoriteComponent","convert","components","data","amount","cryptoFirst","cryptoSecond","error","result","favs","methods","changeAmount","val","changeCryptoFirst","changeCryptoSecond","ready","favourite","push","from","to","getfromFavs","index"],"sources":["/home/homesasha/Python_Fullstack/Vue.js/crypto_exchange/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>CRYPTO</h1>\n    <BaseInput @changeAmount=\"changeAmount\" @convert=\"convert\" @favourite=\"favourite\" />\n    <p v-if=\"error != ''\" class=\"error\">{{error}}</p>\n    <p v-if=\"result != 0\" class=\"result\">Результат : {{result}}</p>\n    <FavuoriteComponent :favs=\"favs\" @getfromFavs=\"getfromFavs\" v-if=\"favs.length > 0\"/>\n    <div className=\"selectors\">\n      <SelectorCrypto @changeCrypto=\"changeCryptoFirst\"/>\n      <SelectorCrypto @changeCrypto=\"changeCryptoSecond\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseInput from './components/BaseInput.vue';\nimport SelectorCrypto from './components/SelectorCrypto.vue';\nimport CryptoConvert from 'crypto-convert';\nimport FavuoriteComponent from './components/FavouriteComponent.vue';\n\nconst convert = new CryptoConvert();\n\nexport default {\n  components: {\n    BaseInput,\n    SelectorCrypto,\n    FavuoriteComponent\n  },\n  data(){\n    return{\n      amount: 0,\n      cryptoFirst: '',\n      cryptoSecond: '',\n      error: '',\n      result: 0,\n      favs: []\n    }\n  },\n  methods: {\n    changeAmount(val){\n      this.amount = val;\n      this.result = 0;\n    },\n    changeCryptoFirst(val){\n      this.cryptoFirst = val;\n    },\n    changeCryptoSecond(val){\n      this.cryptoSecond = val;\n    },\n    async convert(){\n      this.result = 0;\n      if(this.amount <= 0){\n        this.error = \"Введіть число більше 0\";\n        return;\n      } else if (this.cryptoFirst === '' || this.cryptoSecond === ''){\n        this.error = \"Оберіть криптовалюти\";\n        return;\n      } else if (this.cryptoFirst === this.cryptoSecond){\n        this.error = \"Оберіть різні криптовалюти\";\n        return;\n      }\n\n      this.error = '';\n\n      await convert.ready();\n\n      this.result = convert[this.cryptoFirst][this.cryptoSecond](this.amount);\n    },\n    favourite(){\n      this.favs.push({\n        from: this.cryptoFirst,\n        to: this.cryptoSecond,\n      });\n    },\n    getfromFavs(index){\n    }\n  }\n}\n</script>\n\n<style scoped>\n.selectors{\n  display: flex;\n  justify-content: space-around;\n  width: 700px;\n  margin: 0 auto;\n}\n.error{\n  display: inline-block; \n  background-color: #d03939;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 3px;\n}\n.error::before{\n  content: \"! \";\n}\n.result{\n    font-family: \"Nabla\", \"Montserrat\", sans-serif;\n    font-size: 2em;\n    color: whitesmoke;\n}\n</style>\n"],"mappings":";AAeA,OAAOA,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,aAAY,MAAO,gBAAgB;AAC1C,OAAOC,kBAAiB,MAAO,qCAAqC;AAEpE,MAAMC,OAAM,GAAI,IAAIF,aAAa,CAAC,CAAC;AAEnC,eAAe;EACbG,UAAU,EAAE;IACVL,SAAS;IACTC,cAAc;IACdE;EACF,CAAC;EACDG,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,MAAM,EAAE,CAAC;MACTC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,GAAG,EAAC;MACf,IAAI,CAACR,MAAK,GAAIQ,GAAG;MACjB,IAAI,CAACJ,MAAK,GAAI,CAAC;IACjB,CAAC;IACDK,iBAAiBA,CAACD,GAAG,EAAC;MACpB,IAAI,CAACP,WAAU,GAAIO,GAAG;IACxB,CAAC;IACDE,kBAAkBA,CAACF,GAAG,EAAC;MACrB,IAAI,CAACN,YAAW,GAAIM,GAAG;IACzB,CAAC;IACD,MAAMX,OAAOA,CAAA,EAAE;MACb,IAAI,CAACO,MAAK,GAAI,CAAC;MACf,IAAG,IAAI,CAACJ,MAAK,IAAK,CAAC,EAAC;QAClB,IAAI,CAACG,KAAI,GAAI,wBAAwB;QACrC;MACF,OAAO,IAAI,IAAI,CAACF,WAAU,KAAM,EAAC,IAAK,IAAI,CAACC,YAAW,KAAM,EAAE,EAAC;QAC7D,IAAI,CAACC,KAAI,GAAI,sBAAsB;QACnC;MACF,OAAO,IAAI,IAAI,CAACF,WAAU,KAAM,IAAI,CAACC,YAAY,EAAC;QAChD,IAAI,CAACC,KAAI,GAAI,4BAA4B;QACzC;MACF;MAEA,IAAI,CAACA,KAAI,GAAI,EAAE;MAEf,MAAMN,OAAO,CAACc,KAAK,CAAC,CAAC;MAErB,IAAI,CAACP,MAAK,GAAIP,OAAO,CAAC,IAAI,CAACI,WAAW,CAAC,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,IAAI,CAACF,MAAM,CAAC;IACzE,CAAC;IACDY,SAASA,CAAA,EAAE;MACT,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC;QACbC,IAAI,EAAE,IAAI,CAACb,WAAW;QACtBc,EAAE,EAAE,IAAI,CAACb;MACX,CAAC,CAAC;IACJ,CAAC;IACDc,WAAWA,CAACC,KAAK,EAAC,CAClB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}