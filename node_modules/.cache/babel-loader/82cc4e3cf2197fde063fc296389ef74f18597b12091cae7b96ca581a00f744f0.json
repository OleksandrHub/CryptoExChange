{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.filter.js\");\nrequire(\"core-js/modules/es.iterator.map.js\");\nrequire(\"core-js/modules/es.iterator.reduce.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst rests_1 = __importDefault(require(\"rests\"));\nconst helpers_1 = require(\"./helpers\");\n//We need to specify the list of pairs for kraken ticker API, because the mfs couldn't add an 'ALL' parameter.\n//This is done automatically and saved on this variable as cache.\nlet krakenPairsList;\n//Binance shows old prices on closed markets for some reason.\n//We check the book ticker to filter out closed markets.\nlet closedMarketsBinance;\nconst API = (0, rests_1.default)({\n  binance: {\n    $options: {\n      base: \"https://api.binance.com/api/v3\"\n    },\n    bookTicker: {\n      path: '/ticker/bookTicker',\n      on_success: response => response.json\n    },\n    ticker: {\n      path: \"/ticker/price\",\n      on_request(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n          if (!closedMarketsBinance) {\n            const bookTicker = yield request.instance.binance.bookTicker();\n            closedMarketsBinance = bookTicker.map(pair => {\n              if (parseFloat(pair.askPrice) <= 0) {\n                return pair.symbol;\n              }\n              return false;\n            }).filter(p => p);\n            //console.log(`${closedMarketsBinance.length} Binance Closed Markets have been filtered.`);\n          }\n        });\n      },\n      on_success(response, request) {\n        //We use USD stablecoins to calculate Binance price\n        const usdPegs = {\n            'USDT': 'USD',\n            'USDC': 'USD',\n            'BUSD': 'USD'\n          },\n          data = response.json;\n        if (!data || !Array.isArray(data)) {\n          throw new Error(`Invalid response from Binance: ${JSON.stringify(data)}`);\n        }\n        return data.reduce((obj, pair) => {\n          //Filter closed markets\n          if (closedMarketsBinance && closedMarketsBinance.indexOf(pair.symbol) !== -1) {\n            return obj;\n          }\n          const bSymbol = (0, helpers_1.symbolMap)(pair.symbol, usdPegs),\n            bPrice = parseFloat(pair.price);\n          obj[bSymbol] = bPrice;\n          return obj;\n        }, {});\n      }\n    }\n  },\n  bitfinex: {\n    $options: {\n      base: \"https://api-pub.bitfinex.com/v2\"\n    },\n    ticker: {\n      path: \"/tickers\",\n      params: {\n        symbols: {\n          help: 'The symbols you want information about as a comma separated list, or ALL for every symbol. (Examples of possible symbols: tBTCUSD, tETHUSD, fUSD, fBTC)',\n          default: 'ALL',\n          type: 'string'\n        }\n      },\n      on_success: function (response) {\n        const coinAliases = {\n            'BAB': 'BCH',\n            'DSH': 'DASH'\n          },\n          data = response.json;\n        if (!data || !Array.isArray(data)) {\n          throw new Error(`Invalid response from Bitfinex: ${JSON.stringify(data)}`);\n        }\n        return data.reduce((obj, pair) => {\n          if (!pair[0].startsWith(\"t\")) {\n            return obj;\n          }\n          const bSymbol = (0, helpers_1.symbolMap)(pair[0].replace(/^t/, ''), coinAliases, true).replace(':', ''),\n            bPrice = parseFloat(pair[7]);\n          obj[bSymbol] = bPrice;\n          return obj;\n        }, {});\n      }\n    }\n  },\n  coinbase: {\n    $options: {\n      base: 'https://api.coinbase.com/v2'\n    },\n    ticker: {\n      path: '/exchange-rates',\n      params: {\n        currency: {\n          help: 'The exchange currency (default USD)'\n        }\n      },\n      on_success: response => {\n        var _a;\n        const data = (_a = response === null || response === void 0 ? void 0 : response.json) === null || _a === void 0 ? void 0 : _a.data;\n        if (!data) {\n          throw new Error(`Invalid response from Coinbase: ${data}`);\n        }\n        return Object.keys(data.rates).reduce((o, v, i) => {\n          const bSymbol = v + data.currency,\n            bPrice = (0, helpers_1.formatNumber)(1 / parseFloat(data.rates[v]), 8);\n          o[bSymbol] = bPrice;\n          return o;\n        }, {});\n      }\n    }\n  },\n  kraken: {\n    $options: {\n      base: 'https://api.kraken.com/0/public'\n    },\n    pairs: {\n      path: '/AssetPairs',\n      on_success: res => {\n        //console.log(\"Getting kraken pairs...\");\n        return Object.keys(res.json.result);\n      }\n    },\n    ticker: {\n      path: '/Ticker',\n      on_request: request => __awaiter(void 0, void 0, void 0, function* () {\n        if (!krakenPairsList) {\n          const assetPairs = yield request.instance.kraken.pairs();\n          krakenPairsList = assetPairs;\n        }\n        return {\n          url: request.url + '?pair=' + krakenPairsList\n        };\n      }),\n      on_success: response => {\n        var _a;\n        //They have weird symbols like XXRPXXBT\n        const fixedSymbols = {\n            'XETC': 'ETC',\n            'XETH': 'ETH',\n            'XLTC': 'LTC',\n            'XMLN': 'MLN',\n            'XREP': 'REP',\n            'XXBT': 'BTC',\n            'XXDG': 'XDG',\n            'XXLM': 'XLM',\n            'XXMR': 'XMR',\n            'XXRP': 'XRP',\n            'XZEC': 'ZEC',\n            'XBT': 'BTC',\n            'ZAUD': 'AUD',\n            'ZEUR': 'EUR',\n            'ZGBP': 'GBP',\n            'ZUSD': 'USD',\n            'ZCAD': 'CAD',\n            'ZJPY': 'JPY'\n          },\n          data = (_a = response.json) === null || _a === void 0 ? void 0 : _a.result;\n        if (!data) {\n          throw new Error(`Invalid response from Kraken: ${JSON.stringify(data)}`);\n        }\n        return Object.keys(data).reduce((obj, symbol) => {\n          const bSymbol = (0, helpers_1.symbolMap)(symbol, fixedSymbols, true),\n            bPrice = parseFloat(data[symbol].c[0]);\n          obj[bSymbol] = bPrice;\n          return obj;\n        }, {});\n      }\n    }\n  },\n  coinmarketcap: {\n    $options: {\n      base: \"https://api.coinmarketcap.com/data-api/v3\"\n    },\n    top: {\n      path: \"/map/all\",\n      params: {\n        limit: {\n          default: \"150\"\n        },\n        listing_status: {\n          default: \"active\"\n        }\n      },\n      on_success: function (response) {\n        const data = response.json;\n        if (!data || !data.data || !Array.isArray(data.data.cryptoCurrencyMap)) {\n          throw new Error(`Invalid response from CoinMarketCap: ${JSON.stringify(data)}`);\n        }\n        return data.data.cryptoCurrencyMap.reduce((o, v) => {\n          o[v.symbol] = {\n            id: v.id,\n            title: v.name,\n            symbol: v.symbol,\n            logo: `https://s2.coinmarketcap.com/static/img/coins/128x128/${v.id}.png`,\n            rank: v.rank\n          };\n          return o;\n        }, {});\n      }\n    }\n  },\n  fiat: {\n    all: {\n      path: \"https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml\",\n      on_success: function (response) {\n        var xml = response.text;\n        var currencies = [...xml.matchAll(/currency=[\"']([A-Za-z]+)[\"']/gi)];\n        var rates = [...xml.matchAll(/rate=[\"']([.0-9]+)[\"']/gi)];\n        var full = currencies.reduce((obj, v, index) => Object.assign(Object.assign({}, obj), {\n          [v[1]]: rates[index][1]\n        }), {});\n        full['EUR'] = 1; //Base is in EUR\n        return full;\n      }\n    }\n  },\n  coinconvert: {\n    $options: {\n      base: 'https://api.coinconvert.net'\n    },\n    ticker: {\n      path: \"/v2/ticker\",\n      params: {\n        v: {\n          default: '2.1.7'\n        },\n        filterExchanges: {\n          type: \"array\"\n        },\n        noAverage: {\n          type: \"boolean\"\n        }\n      },\n      on_success: response => response.json\n    },\n    list: {\n      path: \"/v2/list?v=2.1.7\",\n      on_success: response => response.json\n    }\n  }\n});\nexports.default = API;","map":{"version":3,"names":["require","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","rests_1","helpers_1","krakenPairsList","closedMarketsBinance","API","default","binance","$options","base","bookTicker","path","on_success","response","json","ticker","on_request","request","instance","map","pair","parseFloat","askPrice","symbol","filter","p","usdPegs","data","Array","isArray","Error","JSON","stringify","reduce","obj","indexOf","bSymbol","symbolMap","bPrice","price","bitfinex","params","symbols","help","type","coinAliases","startsWith","replace","coinbase","currency","_a","keys","rates","o","v","i","formatNumber","kraken","pairs","res","assetPairs","url","fixedSymbols","c","coinmarketcap","top","limit","listing_status","cryptoCurrencyMap","id","title","name","logo","rank","fiat","all","xml","text","currencies","matchAll","full","index","assign","coinconvert","filterExchanges","noAverage","list"],"sources":["/home/homesasha/Python_Fullstack/Vue.js/crypto_exchange/node_modules/crypto-convert/dist/api.js"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst rests_1 = __importDefault(require(\"rests\"));\r\nconst helpers_1 = require(\"./helpers\");\r\n//We need to specify the list of pairs for kraken ticker API, because the mfs couldn't add an 'ALL' parameter.\r\n//This is done automatically and saved on this variable as cache.\r\nlet krakenPairsList;\r\n//Binance shows old prices on closed markets for some reason.\r\n//We check the book ticker to filter out closed markets.\r\nlet closedMarketsBinance;\r\nconst API = (0, rests_1.default)({\r\n    binance: {\r\n        $options: {\r\n            base: \"https://api.binance.com/api/v3\"\r\n        },\r\n        bookTicker: {\r\n            path: '/ticker/bookTicker',\r\n            on_success: (response) => (response.json)\r\n        },\r\n        ticker: {\r\n            path: \"/ticker/price\",\r\n            on_request(request) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (!closedMarketsBinance) {\r\n                        const bookTicker = yield request.instance.binance.bookTicker();\r\n                        closedMarketsBinance = bookTicker.map((pair) => {\r\n                            if (parseFloat(pair.askPrice) <= 0) {\r\n                                return pair.symbol;\r\n                            }\r\n                            return false;\r\n                        }).filter(p => p);\r\n                        //console.log(`${closedMarketsBinance.length} Binance Closed Markets have been filtered.`);\r\n                    }\r\n                });\r\n            },\r\n            on_success(response, request) {\r\n                //We use USD stablecoins to calculate Binance price\r\n                const usdPegs = {\r\n                    'USDT': 'USD',\r\n                    'USDC': 'USD',\r\n                    'BUSD': 'USD'\r\n                }, data = response.json;\r\n                if (!data || !Array.isArray(data)) {\r\n                    throw new Error(`Invalid response from Binance: ${JSON.stringify(data)}`);\r\n                }\r\n                return data.reduce((obj, pair) => {\r\n                    //Filter closed markets\r\n                    if (closedMarketsBinance && closedMarketsBinance.indexOf(pair.symbol) !== -1) {\r\n                        return obj;\r\n                    }\r\n                    const bSymbol = (0, helpers_1.symbolMap)(pair.symbol, usdPegs), bPrice = parseFloat(pair.price);\r\n                    obj[bSymbol] = bPrice;\r\n                    return obj;\r\n                }, {});\r\n            },\r\n        }\r\n    },\r\n    bitfinex: {\r\n        $options: {\r\n            base: \"https://api-pub.bitfinex.com/v2\"\r\n        },\r\n        ticker: {\r\n            path: \"/tickers\",\r\n            params: {\r\n                symbols: {\r\n                    help: 'The symbols you want information about as a comma separated list, or ALL for every symbol. (Examples of possible symbols: tBTCUSD, tETHUSD, fUSD, fBTC)',\r\n                    default: 'ALL',\r\n                    type: 'string'\r\n                }\r\n            },\r\n            on_success: function (response) {\r\n                const coinAliases = {\r\n                    'BAB': 'BCH',\r\n                    'DSH': 'DASH'\r\n                }, data = response.json;\r\n                if (!data || !Array.isArray(data)) {\r\n                    throw new Error(`Invalid response from Bitfinex: ${JSON.stringify(data)}`);\r\n                }\r\n                return data.reduce((obj, pair) => {\r\n                    if (!pair[0].startsWith(\"t\")) {\r\n                        return obj;\r\n                    }\r\n                    const bSymbol = (0, helpers_1.symbolMap)(pair[0].replace(/^t/, ''), coinAliases, true).replace(':', ''), bPrice = parseFloat(pair[7]);\r\n                    obj[bSymbol] = bPrice;\r\n                    return obj;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    coinbase: {\r\n        $options: {\r\n            base: 'https://api.coinbase.com/v2'\r\n        },\r\n        ticker: {\r\n            path: '/exchange-rates',\r\n            params: {\r\n                currency: {\r\n                    help: 'The exchange currency (default USD)',\r\n                },\r\n            },\r\n            on_success: (response) => {\r\n                var _a;\r\n                const data = (_a = response === null || response === void 0 ? void 0 : response.json) === null || _a === void 0 ? void 0 : _a.data;\r\n                if (!data) {\r\n                    throw new Error(`Invalid response from Coinbase: ${data}`);\r\n                }\r\n                return Object.keys(data.rates).reduce((o, v, i) => {\r\n                    const bSymbol = v + data.currency, bPrice = (0, helpers_1.formatNumber)(1 / parseFloat(data.rates[v]), 8);\r\n                    o[bSymbol] = bPrice;\r\n                    return o;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    kraken: {\r\n        $options: {\r\n            base: 'https://api.kraken.com/0/public'\r\n        },\r\n        pairs: {\r\n            path: '/AssetPairs',\r\n            on_success: (res) => {\r\n                //console.log(\"Getting kraken pairs...\");\r\n                return Object.keys(res.json.result);\r\n            }\r\n        },\r\n        ticker: {\r\n            path: '/Ticker',\r\n            on_request: (request) => __awaiter(void 0, void 0, void 0, function* () {\r\n                if (!krakenPairsList) {\r\n                    const assetPairs = yield request.instance.kraken.pairs();\r\n                    krakenPairsList = assetPairs;\r\n                }\r\n                return {\r\n                    url: request.url + '?pair=' + krakenPairsList\r\n                };\r\n            }),\r\n            on_success: (response) => {\r\n                var _a;\r\n                //They have weird symbols like XXRPXXBT\r\n                const fixedSymbols = {\r\n                    'XETC': 'ETC',\r\n                    'XETH': 'ETH',\r\n                    'XLTC': 'LTC',\r\n                    'XMLN': 'MLN',\r\n                    'XREP': 'REP',\r\n                    'XXBT': 'BTC',\r\n                    'XXDG': 'XDG',\r\n                    'XXLM': 'XLM',\r\n                    'XXMR': 'XMR',\r\n                    'XXRP': 'XRP',\r\n                    'XZEC': 'ZEC',\r\n                    'XBT': 'BTC',\r\n                    'ZAUD': 'AUD',\r\n                    'ZEUR': 'EUR',\r\n                    'ZGBP': 'GBP',\r\n                    'ZUSD': 'USD',\r\n                    'ZCAD': 'CAD',\r\n                    'ZJPY': 'JPY'\r\n                }, data = (_a = response.json) === null || _a === void 0 ? void 0 : _a.result;\r\n                if (!data) {\r\n                    throw new Error(`Invalid response from Kraken: ${JSON.stringify(data)}`);\r\n                }\r\n                return Object.keys(data).reduce((obj, symbol) => {\r\n                    const bSymbol = (0, helpers_1.symbolMap)(symbol, fixedSymbols, true), bPrice = parseFloat(data[symbol].c[0]);\r\n                    obj[bSymbol] = bPrice;\r\n                    return obj;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    coinmarketcap: {\r\n        $options: {\r\n            base: \"https://api.coinmarketcap.com/data-api/v3\"\r\n        },\r\n        top: {\r\n            path: \"/map/all\",\r\n            params: {\r\n                limit: {\r\n                    default: \"150\",\r\n                },\r\n                listing_status: {\r\n                    default: \"active\"\r\n                }\r\n            },\r\n            on_success: function (response) {\r\n                const data = response.json;\r\n                if (!data || !data.data || !Array.isArray(data.data.cryptoCurrencyMap)) {\r\n                    throw new Error(`Invalid response from CoinMarketCap: ${JSON.stringify(data)}`);\r\n                }\r\n                return data.data.cryptoCurrencyMap.reduce((o, v) => {\r\n                    o[v.symbol] = {\r\n                        id: v.id,\r\n                        title: v.name,\r\n                        symbol: v.symbol,\r\n                        logo: `https://s2.coinmarketcap.com/static/img/coins/128x128/${v.id}.png`,\r\n                        rank: v.rank,\r\n                    };\r\n                    return o;\r\n                }, {});\r\n            }\r\n        }\r\n    },\r\n    fiat: {\r\n        all: {\r\n            path: \"https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml\",\r\n            on_success: function (response) {\r\n                var xml = response.text;\r\n                var currencies = [...xml.matchAll(/currency=[\"']([A-Za-z]+)[\"']/gi)];\r\n                var rates = [...xml.matchAll(/rate=[\"']([.0-9]+)[\"']/gi)];\r\n                var full = currencies.reduce((obj, v, index) => (Object.assign(Object.assign({}, obj), { [v[1]]: rates[index][1] })), {});\r\n                full['EUR'] = 1; //Base is in EUR\r\n                return full;\r\n            }\r\n        }\r\n    },\r\n    coinconvert: {\r\n        $options: {\r\n            base: 'https://api.coinconvert.net'\r\n        },\r\n        ticker: {\r\n            path: \"/v2/ticker\",\r\n            params: {\r\n                v: {\r\n                    default: '2.1.7'\r\n                },\r\n                filterExchanges: {\r\n                    type: \"array\"\r\n                },\r\n                noAverage: {\r\n                    type: \"boolean\"\r\n                }\r\n            },\r\n            on_success: (response) => (response.json)\r\n        },\r\n        list: {\r\n            path: \"/v2/list?v=2.1.7\",\r\n            on_success: (response) => (response.json)\r\n        }\r\n    }\r\n});\r\nexports.default = API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}